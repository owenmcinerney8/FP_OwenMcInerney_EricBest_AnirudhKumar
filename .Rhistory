### Car bar chart of
# Wrangle Data to get total sum of car ownership by region between 2019 and 2022
EV_ownership_region_2019_2022 <- EV_ownership_region_year_raw %>%
filter(year >= 2019) %>%
group_by(region) %>%
summarise(count = sum(count))
# use y = reorder(region, +count) to order countries by car ownership
regional_ev_ownership_bar_chart <- ggplot(EV_ownership_region_2019_2022, aes(x = count, y = reorder(region, +count), fill = 'red')) +
geom_col() +
scale_x_continuous(limits = c(0, max(EV_ownership_order_by_country$count)), n.breaks = 9) +
labs(title = "EV Ownership By Region",
subtitle = "Total EVs Owned from 2019 to 2022 for each Region",
x = "Count of Electric Vehicles",
y = "Region") +
theme_classic() +
theme(legend.position = "none") # removes legend
regional_ev_ownership_bar_chart # to view bar chart
View(EV_ownership_region_2019_2022)
global_ev_ownership_by_year_bar_chart # to view bar chart
regional_ev_ownership_bar_chart
# use y = reorder(region, +count) to order countries by car ownership
regional_ev_ownership_bar_chart <- ggplot(EV_ownership_region_2019_2022, aes(x = count, y = reorder(region, +count), fill = 'red')) +
geom_col() +
scale_x_continuous(limits = c(0, max(EV_ownership_order_by_country$count)), n.breaks = 7) +
labs(title = "EV Ownership By Region",
subtitle = "Total EVs Owned from 2019 to 2022 for each Region",
x = "Count of Electric Vehicles",
y = "Region") +
theme_classic() +
theme(legend.position = "none") # removes legend
regional_ev_ownership_bar_chart # to view bar chart
# use y = reorder(region, +count) to order countries by car ownership
regional_ev_ownership_bar_chart <- ggplot(EV_ownership_region_2019_2022, aes(x = count, y = reorder(region, +count), fill = 'red')) +
geom_col() +
scale_x_continuous(limits = c(0, max(EV_ownership_order_by_country$count)), n.breaks = 9) +
labs(title = "EV Ownership By Region",
subtitle = "Total EVs Owned from 2019 to 2022 for each Region",
x = "Count of Electric Vehicles",
y = "Region") +
theme_classic() +
theme(legend.position = "none") # removes legend
regional_ev_ownership_bar_chart # to view bar chart
# use y = reorder(region, +count) to order countries by car ownership
regional_ev_ownership_bar_chart <- ggplot(EV_ownership_region_2019_2022, aes(x = count, y = reorder(region, +count), fill = 'red')) +
geom_col() +
scale_x_continuous(limits = c(0, max(EV_ownership_order_by_country$count)), n.breaks = 9) +
labs(title = "EV Ownership By Region",
subtitle = "Total EVs Owned from 2019 to 2022 for each Region",
x = "Count of Electric Vehicles",
y = "Region") +
theme_classic() +
theme(legend.position = "none") # removes legend
regional_ev_ownership_bar_chart # to view bar chart
### Load Packages
## Use groundhog to make sure the code runs mostly everywhere
library(groundhog)
groundhog.day="2023-11-20"
pkgs=c('here', 'dplyr', 'dbplyr', 'ggplot2')
groundhog.library(pkgs, groundhog.day)
### Load Data
## Using 'here' for a relative file path
options(scipen = 999) # Ensures scientific notation is not used
csv_path <- here("IEA_EV_SalesHistoricalCars.csv")
EV_Global_Historical_raw <- read.csv(csv_path)
### Wrangle Data
## wrangle data to include columns for: year, region, count of EVs
EV_ownership_region_year_raw <- EV_Global_Historical_raw %>%
filter(unit == 'Vehicles', region != "World") %>%
select(region, year, value) %>%
group_by(region, year) %>%
summarise(count = sum(value))
## wrangled data to cases of years with attributes: year, count of EVs
EV_ownership_global_year <- EV_ownership_region_year_raw %>%
group_by(year) %>%
summarise(count = sum(count))
### CREATE Bar Chart of Global EV Ownership by Year
global_ev_ownership_by_year_bar_chart <- ggplot(EV_ownership_global_year, aes(x = year, y = count, fill = 'red')) +
geom_col() +
scale_y_continuous(n.breaks = 8, limits = c(0, max(EV_production_global_year$count))) +
scale_x_continuous(n.breaks = 11) +
labs(title = "Global EV Ownership since 2010",
x = "Year",
y = "Count of Electric Vehicles") +
theme_classic() +
theme(legend.position = "none") # removes legend
global_ev_ownership_by_year_bar_chart # to view bar chart
### Car bar chart of
# Wrangle Data to get cases of regions from 2019-2022 with attributes: region, count
EV_ownership_region_2019_2022 <- EV_ownership_region_year_raw %>%
filter(year >= 2019) %>%
group_by(region) %>%
summarise(count = sum(count))
# use y = reorder(region, +count) to order countries by car ownership
regional_ev_ownership_bar_chart <- ggplot(EV_ownership_region_2019_2022, aes(x = count, y = reorder(region, +count), fill = 'red')) +
geom_col() +
scale_x_continuous(limits = c(0, max(EV_ownership_order_by_country$count)), n.breaks = 9) +
labs(title = "EV Ownership By Region",
subtitle = "Total EVs Owned from 2019 to 2022 for each Region",
x = "Count of Electric Vehicles",
y = "Region") +
theme_classic() +
theme(legend.position = "none") # removes legend
regional_ev_ownership_bar_chart # to view bar chart
# use y = reorder(region, +count) to order countries by car ownership
regional_ev_ownership_bar_chart <- ggplot(EV_ownership_region_2019_2022, aes(x = count, y = reorder(region, +count), fill = 'red')) +
geom_col() +
scale_x_continuous(limits = c(0, max(EV_ownership_order_by_country$count)), n.breaks = 6) +
labs(title = "EV Ownership By Region",
subtitle = "Total EVs Owned from 2019 to 2022 for each Region",
x = "Count of Electric Vehicles",
y = "Region") +
theme_classic() +
theme(legend.position = "none") # removes legend
regional_ev_ownership_bar_chart # to view bar chart
# use y = reorder(region, +count) to order countries by car ownership
regional_ev_ownership_bar_chart <- ggplot(EV_ownership_region_2019_2022, aes(x = count, y = reorder(region, +count), fill = 'red')) +
geom_col() +
scale_x_continuous(limits = c(0, max(EV_ownership_order_by_country$count)), n.breaks = 8) +
labs(title = "EV Ownership By Region",
subtitle = "Total EVs Owned from 2019 to 2022 for each Region",
x = "Count of Electric Vehicles",
y = "Region") +
theme_classic() +
theme(legend.position = "none") # removes legend
regional_ev_ownership_bar_chart # to view bar chart
# use y = reorder(region, +count) to order countries by car ownership
regional_ev_ownership_bar_chart <- ggplot(EV_ownership_region_2019_2022, aes(x = count, y = reorder(region, +count), fill = 'red')) +
geom_col() +
scale_x_continuous(limits = c(0, max(EV_ownership_order_by_country$count)), n.breaks = 6) +
labs(title = "EV Ownership By Region",
subtitle = "Total EVs Owned from 2019 to 2022 for each Region",
x = "Count of Electric Vehicles",
y = "Region") +
theme_classic() +
theme(legend.position = "none") # removes legend
regional_ev_ownership_bar_chart # to view bar chart
### Load Packages
## Use groundhog to make sure the code runs mostly everywhere
library(groundhog)
groundhog.day="2023-11-20"
pkgs=c('here', 'dplyr', 'dbplyr', 'ggplot2')
groundhog.library(pkgs, groundhog.day)
### Load Data
## Using 'here' for a relative file path
csv_path <- here("all_alpha_24.xlsx")
EV_Global_Historical_raw <- read.xlsx(csv_path)
pkgs=c('readxl', 'dplyr', 'dbplyr', 'ggplot2')
groundhog.library(pkgs, groundhog.day)
### read in data
EV_Global_Historical_raw <- read_excel("all_alpha_24.xlsx")
### read in data
EV_GAS_data_raw <- read_excel("all_alpha_24.xlsx")
### Load Packages
## Use groundhog to make sure the code runs mostly everywhere
library(groundhog)
groundhog.day="2023-11-20"
pkgs=c('readxl', 'dplyr', 'dbplyr', 'ggplot2')
groundhog.library(pkgs, groundhog.day)
### read in data
EV_GAS_data_raw <- read_excel("all_alpha_24.xlsx")
View(EV_GAS_data_raw)
### Wrangle data to include Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
## Change names of columns with spaces
colnames(EV_GAS_data_raw)[11] = "veh_class"
View(EV_GAS_data_raw)
colnames(EV_GAS_data_raw)[12] = "air_pollution_score"
colnames(EV_GAS_data_raw)[16] = "greenhouse_gas_score"
colnames(EV_GAS_data_raw)[13] = "city_mpg"
colnames(EV_GAS_data_raw)[14] = "highway_mpg"
# Select to Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
Select(Model, Fuel, veh_class, air_pollution_score, `city_mpg, highway_mpg, greenhouse_gas_score)
# Select to Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
select(Model, Fuel, veh_class, air_pollution_score, `city_mpg, highway_mpg, greenhouse_gas_score)
# Select to Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
select(Model, Fuel, veh_class, air_pollution_score, city_mpg, highway_mpg, greenhouse_gas_score)
View(EV_GAS_data)
### Make Box Plot
EV_GAS_box_plot <- EV_GAS_data_raw %>%
ggplot(aes(x = city_mpg, y = "")) +
geom_boxplot()
### Load Packages
## Use groundhog to make sure the code runs mostly everywhere
library(groundhog)
EV_GAS_box_plot
### Make Box Plot
EV_GAS_box_plot <- EV_GAS_data_raw %>%
ggplot(aes(x = "", y = city_mpg)) +
geom_boxplot()
EV_GAS_box_plot
### Make Box Plot
library(esquisse)
esquisser(data = EV_GAS_data_raw, viewer = getOption(x = "esquisse.viewer", default = "dialog"))
# Select to Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
filter(Fuel = "Gasolone" | Fuel = "Electricity") %>%
# Select to Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
filter(Fuel = "Gasolone" | "Electricity") %>%
select(Model, Fuel, veh_class, air_pollution_score, city_mpg, highway_mpg, greenhouse_gas_score)
# Select to Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
filter(Fuel == "Gasolone" | "Electricity") %>%
select(Model, Fuel, veh_class, air_pollution_score, city_mpg, highway_mpg, greenhouse_gas_score)
# Select to Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
filter(Fuel == "Gasolone" | Fuel == "Electricity") %>%
select(Model, Fuel, veh_class, air_pollution_score, city_mpg, highway_mpg, greenhouse_gas_score)
# Select to Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
filter(Fuel == "Gasoline" | Fuel == "Electricity") %>%
select(Model, Fuel, veh_class, air_pollution_score, city_mpg, highway_mpg, greenhouse_gas_score)
esquisser(data = EV_GAS_data_raw, viewer = getOption(x = "esquisse.viewer", default = "dialog"))
esquisser(data = EV_GAS_data, viewer = getOption(x = "esquisse.viewer", default = "dialog"))
ggplot(EV_GAS_data) +
aes(x = city_mpg) +
geom_boxplot(fill = "red") +
theme_minimal() +
facet_wrap(vars(Fuel))
ggplot(EV_GAS_data) +
aes(Fuel, city_mpg) +
geom_boxplot(fill = "red") +
theme_minimal()
### Make Box Plot
diamonds
### Make Box Plot
library(diamonds)
### Load Packages
## Use groundhog to make sure the code runs mostly everywhere
library(groundhog)
groundhog.day="2023-11-20"
pkgs=c('readxl', 'dplyr', 'dbplyr', 'ggplot2')
groundhog.library(pkgs, groundhog.day)
### read in data
EV_GAS_data_raw <- read_excel("all_alpha_24.xlsx")
# Change names of columns with spaces
colnames(EV_GAS_data_raw)[11] = "veh_class"
colnames(EV_GAS_data_raw)[12] = "air_pollution_score"
colnames(EV_GAS_data_raw)[13] = "city_mpg"
colnames(EV_GAS_data_raw)[14] = "highway_mpg"
colnames(EV_GAS_data_raw)[16] = "greenhouse_gas_score"
# Select to Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
filter(Fuel == "Gasoline" | Fuel == "Electricity") %>%
select(Model, Fuel, veh_class, air_pollution_score, city_mpg, highway_mpg, greenhouse_gas_score)
ggplot(EV_GAS_data) +
aes(Fuel, city_mpg) +
geom_boxplot(fill = "red") +
theme_minimal()
### Make Box Plot
diamonds
diamonds %>%
group_by(clarity, cut) %>%
ggplot(aes(x = clarity, y = price, group = cut, fill = cut)) +
geom_boxplot()
EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = city_mpg, group = Fuel, fill = Fuel)) +
geom_boxplot()
EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = city_mpg, group = Fuel, fill = Fuel)) +
geom_boxplot() +
theme_minimal()
EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = city_mpg, group = Fuel, fill = Fuel)) +
geom_boxplot() +
theme_classic()
EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = city_mpg, group = Fuel, fill = Fuel)) +
geom_boxplot() +
theme_minimal()
geom_boxplot() +
theme_minimal()
EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = city_mpg, group = Fuel, fill = Fuel)) +
scale_y_continuous(n.breaks = 10, limits = c(0, max(EV_GAS_data$city_mpg))) +
geom_boxplot() +
theme_minimal()
EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = city_mpg, group = Fuel, fill = Fuel)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 100)) +
geom_boxplot() +
theme_minimal()
EV_GAS_data_raw$city_mpg=as.numeric(levels(EV_GAS_data_raw$city_mpg))[EV_GAS_data_raw$city_mpg]
EV_GAS_data_raw$highway_mpg=as.numeric(levels(EV_GAS_data_raw$highway_mpg))[EV_GAS_data_raw$highway_mpg]
EV_GAS_data_raw$greenhouse_gas_score=as.numeric(levels(EV_GAS_data_raw$greenhouse_gas_score))[EV_GAS_data_raw$greenhouse_gas_score]
# Select to Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
filter(Fuel == "Gasoline" | Fuel == "Electricity") %>%
select(Model, Fuel, veh_class, air_pollution_score, city_mpg, highway_mpg, greenhouse_gas_score)
### read in data
EV_GAS_data_raw <- read_excel("all_alpha_24.xlsx")
# Change names of columns with spaces
colnames(EV_GAS_data_raw)[11] = "veh_class"
colnames(EV_GAS_data_raw)[12] = "air_pollution_score"
colnames(EV_GAS_data_raw)[13] = "city_mpg"
colnames(EV_GAS_data_raw)[14] = "highway_mpg"
colnames(EV_GAS_data_raw)[16] = "greenhouse_gas_score"
EV_GAS_data_raw <- EV_GAS_data_raw %>%
transform(city_mpg = as.numeric(city_mpg))
EV_GAS_data_raw$city_mpg
# Select to Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
filter(Fuel == "Gasoline" | Fuel == "Electricity", city_mpg != NA) %>%
select(Model, Fuel, veh_class, air_pollution_score, city_mpg, highway_mpg, greenhouse_gas_score)
### read in data
EV_GAS_data_raw <- read_excel("all_alpha_24.xlsx")
# Change names of columns with spaces
colnames(EV_GAS_data_raw)[11] = "veh_class"
colnames(EV_GAS_data_raw)[12] = "air_pollution_score"
colnames(EV_GAS_data_raw)[13] = "city_mpg"
colnames(EV_GAS_data_raw)[14] = "highway_mpg"
colnames(EV_GAS_data_rawg)[16] = "greenhouse_gas_score"
# Select to Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
filter(Fuel == "Gasoline" | Fuel == "Electricity", city_mpg != NA) %>%
select(Model, Fuel, veh_class, air_pollution_score, city_mpg, highway_mpg, greenhouse_gas_score)
colnames(EV_GAS_data_raw)[16] = "greenhouse_gas_score"
# Select to Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
filter(Fuel == "Gasoline" | Fuel == "Electricity", city_mpg != NA) %>%
select(Model, Fuel, veh_class, air_pollution_score, city_mpg, highway_mpg, greenhouse_gas_score)
# Select to Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
filter(Fuel == "Gasoline" | Fuel == "Electricity", city_mpg.isna) %>%
select(Model, Fuel, veh_class, air_pollution_score, city_mpg, highway_mpg, greenhouse_gas_score)
# Select to Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
drop_na(city_mpg) %>%
filter(Fuel == "Gasoline" | Fuel == "Electricity") %>%
select(Model, Fuel, veh_class, air_pollution_score, city_mpg, highway_mpg, greenhouse_gas_score)
pkgs=c('readxl', 'dplyr', 'dbplyr', 'ggplot2', 'tidyverse')
groundhog.library(pkgs, groundhog.day)
### read in data
EV_GAS_data_raw <- read_excel("all_alpha_24.xlsx")
# Change names of columns with spaces
colnames(EV_GAS_data_raw)[11] = "veh_class"
colnames(EV_GAS_data_raw)[12] = "air_pollution_score"
colnames(EV_GAS_data_raw)[13] = "city_mpg"
colnames(EV_GAS_data_raw)[14] = "highway_mpg"
colnames(EV_GAS_data_raw)[16] = "greenhouse_gas_score"
# Select to Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
drop_na(city_mpg) %>%
filter(Fuel == "Gasoline" | Fuel == "Electricity") %>%
select(Model, Fuel, veh_class, air_pollution_score, city_mpg, highway_mpg, greenhouse_gas_score)
EV_GAS_data <- EV_GAS_data %>%
mutate(city_mpg = as.numeric(city_mpg),
highway_mpg = as.numeric(highway_mpg),
greenhouse_gas_score = as.numeric(greenhouse_gas_score))
EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = city_mpg, group = Fuel, fill = Fuel)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 100)) +
geom_boxplot() +
theme_minimal()
EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = city_mpg, y = Fuel, group = Fuel, fill = Fuel)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 100)) +
geom_boxplot() +
theme_minimal()
EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = city_mpg, y = Fuel, group = Fuel, fill = Fuel)) +
scale_x_continuous(n.breaks = 10, limits = c(0, 100)) +
geom_boxplot() +
theme_minimal()
EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = city_mpg, group = Fuel, fill = Fuel)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 100)) +
geom_boxplot() +
theme_minimal()
EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = city_mpg, group = Fuel, fill = Fuel)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 100)) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE) +
theme_minimal()
city_mpg_box_plot
city_mpg_box_plot <- EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = city_mpg, group = Fuel, fill = Fuel)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 100)) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE) +
theme_minimal()
highway_mpg_box_plot <- EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = highway_mpg, group = Fuel, fill = Fuel)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 100)) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE) +
theme_minimal()
greenhouse_gas_score_box_plot <- EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = greenhouse_gas_score, group = Fuel, fill = Fuel)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 100)) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE) +
theme_minimal()
city_mpg_box_plot
highway_mpg_box_plot
greenhouse_gas_score_box_plot
highway_mpg_box_plot <- EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = highway_mpg, group = Fuel, fill = Fuel)) +
scale_y_continuous(n.breaks = 10, limits = c(0, max(EV_GAS_data$highway_mpg))) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE) +
theme_minimal()
greenhouse_gas_score_box_plot <- EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = greenhouse_gas_score, group = Fuel, fill = Fuel)) +
scale_y_continuous(n.breaks = 10, limits = c(0, max(EV_GAS_data$greenhouse_gas_score))) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE) +
theme_minimal()
city_mpg_box_plot
highway_mpg_box_plot
greenhouse_gas_score_box_plot
pkgs=c('readxl', 'dplyr', 'dbplyr', 'ggplot2', 'tidyverse', 'knitr', 'kableExtra')
groundhog.library(pkgs, groundhog.day)
funx <- list(
min = ~min(.x, na.rm = TRUE),
Q1 = ~quantile(.x, probs = 0.20, na.rm = TRUE),
Q2 = ~quantile(.x, probs = 0.40, na.rm = TRUE),
median = ~median(.x, na.rm = TRUE),
Q3 = ~quantile(.x, probs = 0.60, na.rm = TRUE),
Q4 = ~quantile(.x, probs = 0.80, na.rm = TRUE),
max = ~max(.x, na.rm = TRUE),
mean = ~mean(.x, na.rm = TRUE),
std = ~sd(.x, na.rm = TRUE)
)
green_house_gas_data <- EV_GAS_data %>%
group_by(Fuel) %>%
select(Fuel, greenhouse_gas_score) %>%
summarize(
across(
.cols=where(is.numeric),
.fns = funx),
count =n()
)
green_house_gas_data %>%
kable() %>%
kableExtra::kable_classic()
greenhouse_gas_score_summary_table <- green_house_gas_data %>%
kable() %>%
kableExtra::kable_classic()
city_mpg_box_plot
highway_mpg_box_plot
highway_mpg_box_plot <- EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = highway_mpg, group = Fuel, fill = Fuel)) +
labs(title = "Highway MPG EV vs Gas Box Plot", xlab = "Fuel", ylab = "MPG") +
scale_y_continuous(n.breaks = 10, limits = c(0, max(EV_GAS_data$highway_mpg))) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE) +
theme_minimal()
highway_mpg_box_plot
highway_mpg_box_plot <- EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = highway_mpg, group = Fuel, fill = Fuel)) +
labs(title = "Highway MPG EV vs Gas Box Plot", x = "Fuel", y = "MPG") +
scale_y_continuous(n.breaks = 10, limits = c(0, max(EV_GAS_data$highway_mpg))) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE) +
theme_minimal()
highway_mpg_box_plot
highway_mpg_box_plot <- EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = highway_mpg, group = Fuel, fill = Fuel)) +
labs(title = "Highway MPG EV vs Gas Box Plot", subtitle = "EV EPA converted to MPG", x = "Fuel", y = "MPG") +
scale_y_continuous(n.breaks = 10, limits = c(0, max(EV_GAS_data$highway_mpg))) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE) +
theme_minimal()
highway_mpg_box_plot
city_mpg_box_plot <- EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = city_mpg, group = Fuel, fill = Fuel)) +
labs(title = "City MPG EV vs Gas Box Plot", subtitle = "EV EPA converted to MPG", x = "Fuel", y = "MPG") +
scale_y_continuous(n.breaks = 10, limits = c(0, max(EV_GAS_data$city_mpg))) +
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE) +
theme_minimal()
city_mpg_box_plot
# View Data Visualizations
city_mpg_box_plot
highway_mpg_box_plot
greenhouse_gas_score_summary_table
# View Data Visualizations
city_mpg_box_plot
highway_mpg_box_plot
greenhouse_gas_score_summary_table
# View Data Visualizations
city_mpg_box_plot
highway_mpg_box_plot
greenhouse_gas_score_summary_table
greenhouse_gas_score_summary_table <- green_house_gas_data %>%
kable() %>%
kable_classic()
greenhouse_gas_score_summary_table
