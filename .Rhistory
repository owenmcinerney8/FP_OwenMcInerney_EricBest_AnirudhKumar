#---------------------
## Please see Q0Notes_and_Ideas.txt for additional data questions and project documentation
## Question 3: How do EV manufacturers compare in excursion range and vehicle price?
# Package and Filepath Configuration ---------------------------
library(here)
library(readr)
library(ggplot2)
# Including 'here' functionality for portable codes
# 'here' needs the file to be in the current directory, in our case, in the Github repository. It needs to be uploaded
csv_path <- here("EVrange_value_General.csv")
EVrange_value_General <- read.csv(csv_path)
# Data Wrangling ---------------------------
# View the structure of the data to verify column names and types
names <- names(EVrange_value_General)
print(names)
# Create a scatter plot
ggplot(EVrange_value_General, aes(x = `EPA Range (mi)`, y = Price, color = Make)) +
geom_point() +
labs(title = "Scatter Plot of Price vs EPA Range",
x = "EPA.Range..mi",
y = "Price") +
theme_minimal()
#---------------------
#-Data Visualizations-
#---------------------
## Please see Q0Notes_and_Ideas.txt for additional data questions and project documentation
## Question 3: How do EV manufacturers compare in excursion range and vehicle price?
# Package and Filepath Configuration ---------------------------
library(here)
library(readr)
library(ggplot2)
# Including 'here' functionality for portable codes
# 'here' needs the file to be in the current directory, in our case, in the Github repository. It needs to be uploaded
csv_path <- here("EVrange_value_General.csv")
EVrange_value_General <- read.csv(csv_path)
# Data Wrangling ---------------------------
# View the structure of the data to verify column names and types
names <- names(EVrange_value_General)
print(names)
# Create a scatter plot
ggplot(EVrange_value_General, aes(x = `EPA Range (mi)`, y = Price, color = Make)) +
geom_point() +
labs(title = "Scatter Plot of Price vs EPA Range",
x = "EPA Range (mi)",
y = "Price") +
theme_minimal()
#---------------------
#-Data Visualizations-
#---------------------
## Please see Q0Notes_and_Ideas.txt for additional data questions and project documentation
## Question 3: How do EV manufacturers compare in excursion range and vehicle price?
# Package and Filepath Configuration ---------------------------
library(here)
library(readr)
library(ggplot2)
# Including 'here' functionality for portable codes
# 'here' needs the file to be in the current directory, in our case, in the Github repository. It needs to be uploaded
csv_path <- here("EVrange_value_General.csv")
EVrange_value_General <- read.csv(csv_path)
# Data Wrangling ---------------------------
# View the structure of the data to verify column names and types
names <- names(EVrange_value_General)
print(names)
# Create a scatter plot
ggplot(EVrange_value_General, aes(x = `EPA Range (mi)`, y = Price, color = Make)) +
geom_point() +
labs(title = "Scatter Plot of Price vs EPA Range",
x = `"EPA Range (mi)"`,
y = "Price") +
theme_minimal()
#---------------------
#-Data Visualizations-
#---------------------
## Please see Q0Notes_and_Ideas.txt for additional data questions and project documentation
## Question 3: How do EV manufacturers compare by make and average EPA for their products?
# Load Packages ----------------------------------------------------------------
library(groundhog)
groundhog.day <- "2023-11-20"
pkgs <- c("here", "dplyr", "readr", "ggplot2", "tidyverse")
groundhog.library(pkgs, groundhog.day)
# Load Data --------------------------------------------------------------------
# Using 'here' for a relative file path
options(scipen = 999) # Ensures scientific notation is not used
options(digits = 2) # Two Decimal Places
csv_path <- here("EVrange_value_General.csv")
EV_range_value_General <- read.csv(csv_path)
# Data Wrangling ---------------------------------------------------------------
# Need to change name of EPA range attribute to access
colnames(EV_range_value_General)[5] <- "EPA_range_mi"
# Wangling Data to have case: electric vehicle and attribute: price and epa range
EV_range_value_df <- EV_range_value_General %>%
mutate(Price = as.numeric(gsub(",", "", Price))) %>%
select(Price, EPA_range_mi, Make)
# Create a scatter plot
EPA_range_by_make_linear_scatter_plot <- ggplot(EV_range_value_df, aes(x = EPA_range_mi, y = Price)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(
title = "Scatter Plot of Price vs EPA Range",
subtitle = paste("Correlation Coefficient: ", round(cor(EV_range_value_df$Price, EV_range_value_df$EPA_range_mi), 2)),
x = "EPA Range",
y = "Price"
) +
theme_minimal()
EPA_range_by_make_linear_scatter_plot
#---------------------
#-Data Visualizations-
#---------------------
# Please see Q0Notes_and_Ideas.txt for additional data questions and project documentation
# Question 1: How common are charging stations?
# Package and Filepath Configuration ---------------------------
# Use groundhog to make sure the code runs mostly everywhere
library(groundhog)
groundhog.day="2023-11-20"
# 'here' for using a relative filepath
# 'leaflet' will display the map of charging stations
# 'dplyr' is brought in for tidying data
pkgs=c('here', 'leaflet', 'dplyr')
groundhog.library(pkgs, groundhog.day)
# Using 'here' for a relative filepath
csv_path <- here("EVfuelstations.csv")
EVfuelstations <- read.csv(csv_path)
# Data Wrangling ---------------------------
# This dataset includes a column called "Fuel Type Code" that can stand for electric, CNG, etc
# We want to only consider the fuel stations that are ELEC, in Pennsylvania, and for public use
# Private and government charging facilities off limits to the public are not uncommon
# Case Definition: Charging station with relevant attributes:
# Fuel.Type.Code, State, Groups.With.Access.Code,
# Latitude, Longitude
filtered_stations <- EVfuelstations %>%
filter(Fuel.Type.Code == "ELEC") %>%
filter(State == "PA") %>%
filter(Groups.With.Access.Code == 'Public')
# Printing the number of stations in Pennsylvania
num_stations <- nrow(filtered_stations)
print("Number of Public EV Charging Stations in PA:")
print(num_stations)
# The station names and coordinates are easily selected
stationNames <- filtered_stations$Station.Name
latitude <- filtered_stations$Latitude
longitude <- filtered_stations$Longitude
# Create a custom data frame with station coordinates and names
# Leaflet is sensitive to large datasets
station_data <- data.frame(
Name <- stationNames,
Latitude <- latitude,
Longitude <- longitude
)
# Plot data ---------------------------
# Create the leaflet map
# The setView coordinates center the map on PA
EVchargemap <- leaflet(station_data) %>%
setView(lng = -77.8124, lat = 40.86833, zoom = 6) %>%
addTiles() %>%
addMarkers(lat = ~Latitude, lng = ~Longitude, popup = ~Name)
# Display the map
EVchargemap
#---------------------
#-Data Visualizations-
#---------------------
# Please see Q0Notes_and_Ideas.txt for additional data questions and project documentation
# Question 2: What vehicle has the longest excursion time/length on a full-charge?
# Package and Filepath Configuration ---------------------------
library(groundhog)
groundhog.day="2023-11-20"
pkgs=c('dplyr', 'ggplot2', 'knitr', 'here', 'leaflet', 'kableExtra')
groundhog.library(pkgs, groundhog.day)
csv_path <- here("EVcars.csv")
EVcars <- read.csv(csv_path)
# Data Wrangling ---------------------------
EVcars_tidy <- EVcars %>%
filter(Fuel.ID == 41) %>%
select(Automobile.ID, Fuel, Manufacturer.ID, Manufacturer, Model,
Model.Year,Category.ID, Engine.Type, Engine.Size, Transmission.Type,
Category, Engine.Size, City.Fuel.Economy.Units, City.Fuel.Economy,
Highway.Fuel.Economy.Units, Highway.Fuel.Economy)
# Filters to cases where fuel economy is measured in mpge and is a sedan/wagon
EVcars_mpge <- EVcars_tidy %>%
filter(City.Fuel.Economy.Units == 'mpge')
# Table Formatting ---------------------------
funx <- list(
min = ~min(.x, na.rm = TRUE),
Q1 = ~quantile(.x, probs = 0.20, na.rm = TRUE),
Q2 = ~quantile(.x, probs = 0.40, na.rm = TRUE),
median = ~median(.x, na.rm = TRUE),
Q3 = ~quantile(.x, probs = 0.60, na.rm = TRUE),
Q4 = ~quantile(.x, probs = 0.80, na.rm = TRUE),
max = ~max(.x, na.rm = TRUE),
mean = ~mean(.x, na.rm = TRUE),
std = ~sd(.x, na.rm = TRUE)
)
EVcars_mpge_CityHighway_FiveNumSum <- EVcars_mpge %>%
group_by(Category) %>%
select(Category, City.Fuel.Economy, Highway.Fuel.Economy) %>%
summarize(
across(
.cols=where(is.numeric),
.fns = funx),
count =n()
)
EVcars_mpge_CityHighway_FiveNumSum <- setNames(EVcars_mpge_CityHighway_FiveNumSum,
c("Category", "Minimum", "1st Quartile", "2nd Quartile",
"Median", "3rd Quartile", "4th Quartile",
"Max", "Mean", "Standard Deviation", "# of Vehicles"))
# Display Table ---------------------------
EVcars_mpge_CityHighway_FiveNumSum %>%
kable() %>%
kableExtra::kable_classic() %>%
add_header_above(c("EV Highway Economy, in MPGe" = 11))%>%
add_footnote("MPGe: Miles Per Gallon equivalent. This measures an EV's efficiency against gasoline vehicles")
#---------------------
#-Data Visualizations-
#---------------------
## Please see Q0Notes_and_Ideas.txt for additional data questions and project documentation
## Question 3: How do EV manufacturers compare by price and EPA for their products?
# Load Packages ----------------------------------------------------------------
library(groundhog)
groundhog.day <- "2023-11-20"
pkgs <- c("here", "dplyr", "readr", "ggplot2", "tidyverse")
groundhog.library(pkgs, groundhog.day)
# Load Data --------------------------------------------------------------------
# Using 'here' for a relative file path
options(scipen = 999) # Ensures scientific notation is not used
options(digits = 2) # Two Decimal Places
csv_path <- here("EVrange_value_General.csv")
EV_range_value_General <- read.csv(csv_path)
# Data Wrangling ---------------------------------------------------------------
# Need to change name of EPA range attribute to access
colnames(EV_range_value_General)[5] <- "EPA_range_mi"
# Wangling Data to have case: electric vehicle and attribute: price and epa range
EV_range_value_df <- EV_range_value_General %>%
mutate(Price = as.numeric(gsub(",", "", Price))) %>%
select(Price, EPA_range_mi, Make)
# Create a scatter plot
EPA_range_by_make_linear_scatter_plot <- ggplot(EV_range_value_df, aes(x = EPA_range_mi, y = Price)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(
title = "Scatter Plot of Price vs EPA Range",
subtitle = paste("Correlation Coefficient: ", round(cor(EV_range_value_df$Price, EV_range_value_df$EPA_range_mi), 2)),
x = "EPA Range",
y = "Price"
) +
theme_minimal()
EPA_range_by_make_linear_scatter_plot
#---------------------
#-Data Visualizations-
#---------------------
# Please see Q0Notes_and_Ideas.txt for additional data questions and project documentation
# Question 4: How has global EV usage changed over the years?
# Question 5: Which countries lead in EV usage?  Which countries are lagging behind?
# Load Packages --------------------------------------------------------------
# Use groundhog to make sure the code runs mostly everywhere
library(groundhog)
groundhog.day <- "2023-11-20"
pkgs <- c("here", "dplyr", "dbplyr", "ggplot2")
groundhog.library(pkgs, groundhog.day)
# Load Data ------------------------------------------------------------------
# Using 'here' for a relative file path
# Ensures scientific notation is not used
options(scipen = 999)
csv_path <- here("IEA_EV_SalesHistoricalCars.csv")
EV_Global_Historical_raw <- read.csv(csv_path)
# Wrangle Data ---------------------------------------------------------------
# Wrangle data to include columns for: year, region, count of EVs
EV_ownership_region_year_raw <- EV_Global_Historical_raw %>%
filter(unit == "Vehicles", region != "World") %>%
select(region, year, value) %>%
group_by(region, year) %>%
summarise(count = sum(value))
# wrangled data to cases of years with attributes: year, count of EVs
EV_ownership_global_year <- EV_ownership_region_year_raw %>%
group_by(year) %>%
summarise(count = sum(count))
# CREATE Bar Chart of Global EV Ownership by Year ----------------------------
global_ev_ownership_by_year_bar_chart <- ggplot(EV_ownership_global_year, aes(x = year, y = count, fill = "red")) +
geom_col() +
scale_y_continuous(n.breaks = 8, limits = c(0, max(EV_ownership_global_year$count))) +
scale_x_continuous(n.breaks = 11) +
labs(
title = "Global EV Ownership since 2010",
x = "Year",
y = "Count of Electric Vehicles"
) +
theme_classic() +
# removes legend
theme(legend.position = "none")
# to view bar chart
global_ev_ownership_by_year_bar_chart
# Create bar chart of EV Ownership by Country -----------------------------------
# Wrangle Data to get cases of regions from 2019-2022 with attributes: region, count
EV_ownership_region_2019_2022 <- EV_ownership_region_year_raw %>%
filter(year >= 2019) %>%
group_by(region) %>%
summarise(count = sum(count))
# use y = reorder(region, +count) to order countries by car ownership
regional_ev_ownership_bar_chart <- ggplot(EV_ownership_region_2019_2022, aes(x = count, y = reorder(region, +count), fill = "red")) +
geom_col() +
scale_x_continuous(limits = c(0, max(EV_ownership_region_2019_2022$count)), n.breaks = 6) +
labs(
title = "EV Ownership By Region",
subtitle = "Total EVs Owned from 2019 to 2022 for each Region",
x = "Count of Electric Vehicles",
y = "Region"
) +
theme_classic() +
theme(legend.position = "none") # removes legend
regional_ev_ownership_bar_chart # to view bar chart
# Question 5 Expansion: What percentage of EVs do the top 3 owning EV countries own?
# Wrangle Data to top 3 (China, Europe, EU) vs everyone else
EV_ownership_region_2019_2022_order_count <- EV_ownership_region_2019_2022[order(EV_ownership_region_2019_2022$count, decreasing = TRUE), ]
top_3_count <- (sum(EV_ownership_region_2019_2022_order_count[1:3, 2]) / sum(EV_ownership_region_2019_2022_order_count$count)) * 100
bottom_count <- sum(EV_ownership_region_2019_2022_order_count[4:nrow(EV_ownership_region_2019_2022_order_count), 2]) / sum(EV_ownership_region_2019_2022_order_count$count) * 100
top_vs_bottom_df <- data.frame(Top3 = c("Yes", "No"), percent = c(top_3_count, bottom_count)) # create data frame
# Create Bar Chart of Top 3 vs Bottom 3
top_vs_bottom_percent <- top_vs_bottom_df %>%
ggplot(aes(x = Top3, y = percent, fill = Top3)) +
geom_col() +
geom_text(aes(label = paste(as.character(round(percent, digits = 2)), "%", sep = ""), y = percent + 2), size = 3) +
labs(
title = "Percent of World's EVs Owned", subtitle = "Leading 3 Regions Vs The Rest of the World",
x = "Top 3", y = "Percentage"
) +
scale_y_continuous(n.breaks = 10, limits = c(0, 100)) +
theme_bw()
# View Charts ----------------------------------------------------------------
global_ev_ownership_by_year_bar_chart
regional_ev_ownership_bar_chart
top_vs_bottom_percent
#---------------------
#-Data Visualizations-
#---------------------
# Please see Q0Notes_and_Ideas.txt for additional data questions and project documentation
# Question 6: How do EV MPG compare to Gas MPG?
# Load Packages --------------------------------------------------------------
# Use groundhog to make sure the code runs mostly everywhere
library(groundhog)
groundhog.day <- "2023-11-20"
pkgs <- c("readxl", "dplyr", "dbplyr", "ggplot2", "tidyverse", "knitr", "kableExtra")
groundhog.library(pkgs, groundhog.day)
# Load Data ---------------------------------------------------------------
EV_GAS_data_raw <- read_excel("all_alpha_24.xlsx")
# Wrangle Data ---------------------------------------------------------------
# Wrangle data to include Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
# Change names of columns with spaces
colnames(EV_GAS_data_raw)[11] <- "veh_class"
colnames(EV_GAS_data_raw)[12] <- "air_pollution_score"
colnames(EV_GAS_data_raw)[13] <- "city_mpge"
colnames(EV_GAS_data_raw)[14] <- "highway_mpge"
colnames(EV_GAS_data_raw)[15] <- "cmb_mpge"
colnames(EV_GAS_data_raw)[16] <- "greenhouse_gas_score"
# Cases are cars with attributes: Model, fuel, vehicle class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
drop_na(city_mpge) %>%
filter(Fuel == "Gasoline" | Fuel == "Electricity") %>%
select(Model, Fuel, veh_class, air_pollution_score, city_mpge, highway_mpge, cmb_mpge, greenhouse_gas_score) %>%
mutate(
city_mpge = as.numeric(city_mpge),
highway_mpge = as.numeric(highway_mpge),
cmb_mpge = as.numeric(cmb_mpge),
greenhouse_gas_score = as.numeric(greenhouse_gas_score)
)
# Make Box Plots / Greenhouse Summary Table ----------------------------------
# City MPG Box Plot
city_mpge_box_plot <- EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = city_mpge, group = Fuel, fill = Fuel)) +
labs(title = "City MPGe EV vs Gas Box Plot", subtitle = "MPGe is Miles per Gallon equivalent", x = "Fuel", y = "MPGe") +
scale_y_continuous(n.breaks = 10, limits = c(0, max(EV_GAS_data$city_mpge))) +
geom_boxplot(
outlier.colour = "black", outlier.shape = 16,
outlier.size = 2, notch = FALSE
) +
theme_minimal()
# Highway MPG Box Plot
highway_mpge_box_plot <- EV_GAS_data %>%
group_by(Fuel) %>%
ggplot(aes(x = Fuel, y = highway_mpge, group = Fuel, fill = Fuel)) +
labs(title = "Highway MPGe EV vs Gas Box Plot", subtitle = "MPGe is Miles per Gallon equivalent", x = "Fuel", y = "MPGe") +
scale_y_continuous(n.breaks = 10, limits = c(0, max(EV_GAS_data$highway_mpge))) +
geom_boxplot(
outlier.colour = "black", outlier.shape = 16,
outlier.size = 2, notch = FALSE
) +
theme_minimal()
# Greenhouse Gas Score Summary Table
funx <- list(
min = ~ min(.x, na.rm = TRUE),
Q1 = ~ quantile(.x, probs = 0.20, na.rm = TRUE),
Q2 = ~ quantile(.x, probs = 0.40, na.rm = TRUE),
median = ~ median(.x, na.rm = TRUE),
Q3 = ~ quantile(.x, probs = 0.60, na.rm = TRUE),
Q4 = ~ quantile(.x, probs = 0.80, na.rm = TRUE),
max = ~ max(.x, na.rm = TRUE),
mean = ~ mean(.x, na.rm = TRUE),
std = ~ sd(.x, na.rm = TRUE)
)
green_house_gas_data <- EV_GAS_data %>%
group_by(Fuel) %>%
select(Fuel, greenhouse_gas_score) %>%
summarize(
across(
.cols = where(is.numeric),
.fns = funx
),
count = n()
)
### View Data Visualizations ---------------------------------------------------
city_mpge_box_plot
highway_mpge_box_plot
greenhouse_gas_score_summary_table
#---------------------
#-Data Visualizations-
#---------------------
# Please see Q0Notes_and_Ideas.txt for additional data questions and project documentation
# Question 7: How do EV's and ICE cars compare in terms of miles driven per dollar for fuel/electricity?
# Load Packages --------------------------------------------------------------
# Use groundhog to make sure the code runs mostly everywhere
library(groundhog)
groundhog.day <- "2023-11-20"
pkgs <- c("readxl", "dplyr", "dbplyr", "ggplot2", "tidyverse", "knitr", "kableExtra")
groundhog.library(pkgs, groundhog.day)
# Read Data --------------------------------------------------------------------
gas_prices <- read_excel("bls_gas_prices.xlsx", range = "B11:M11", col_names = FALSE)
electricty_prices <- read_excel("bls_electricity_prices.xlsx", range = "B11:M11", col_names = FALSE)
EV_GAS_data_raw <- read_excel("all_alpha_24.xlsx")
# Wrangle Data -----------------------------------------------------------------
electricty_prices[1:12] <- electricty_prices[1:12] * 33.7 # converts from kWh to kWh equivalent of a gallon
fuel_df <- full_join(gas_prices, electricty_prices)
# Currently have each month as a given column: need to label columns
colnames(fuel_df)[1] <- "jan"
colnames(fuel_df)[2] <- "feb"
colnames(fuel_df)[3] <- "mar"
colnames(fuel_df)[4] <- "apr"
colnames(fuel_df)[5] <- "may"
colnames(fuel_df)[6] <- "jun"
colnames(fuel_df)[7] <- "jul"
colnames(fuel_df)[8] <- "aug"
colnames(fuel_df)[9] <- "sep"
colnames(fuel_df)[10] <- "oct"
colnames(fuel_df)[11] <- "nov"
colnames(fuel_df)[12] <- "dec"
# Wrangle data to include Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
# Change names of columns with spaces
colnames(EV_GAS_data_raw)[11] <- "veh_class"
colnames(EV_GAS_data_raw)[12] <- "air_pollution_score"
colnames(EV_GAS_data_raw)[13] <- "city_mpge"
colnames(EV_GAS_data_raw)[14] <- "highway_mpge"
colnames(EV_GAS_data_raw)[15] <- "cmb_mpge"
colnames(EV_GAS_data_raw)[16] <- "greenhouse_gas_score"
# Cases are cars with attributes: Model, fuel, vehicle class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
drop_na(city_mpge) %>%
filter(Fuel == "Gasoline" | Fuel == "Electricity") %>%
select(Model, Fuel, veh_class, air_pollution_score, city_mpge, highway_mpge, cmb_mpge, greenhouse_gas_score) %>%
mutate(
city_mpge = as.numeric(city_mpge),
highway_mpge = as.numeric(highway_mpge),
cmb_mpge = as.numeric(cmb_mpge),
greenhouse_gas_score = as.numeric(greenhouse_gas_score)
)
# To find average mpge for gas and electric
mpge_avg_fuel <- EV_GAS_data %>%
group_by(Fuel) %>%
summarise(mpge_avg = mean(cmb_mpge))
electricity_price_per_mile <- mpge_avg_fuel %>%
filter(Fuel == "Electricity") %>%
select(mpge_avg)
gas_price_per_mile <- mpge_avg_fuel %>%
filter(Fuel == "Gasoline") %>%
select(mpge_avg)
# Make sure they are numeric
electricity_avg_mpge <- as.numeric(electricity_price_per_mile)
gas_avg_mpge <- as.numeric(gas_price_per_mile)
# Add fuel type column to data frame
fuel_df$type <- c("gas", "electricity")
# Need to change cases to months
fuel_df <- fuel_df %>%
pivot_longer(
cols = c(jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec),
names_to = "month",
values_to = "avg_gallon_equaivalent_price"
)
# Making actual dates instead of character dates
dates <- append(
seq(from = as.Date("2022-01-01"), to = as.Date("2022-12-01"), by = "month"),
seq(from = as.Date("2022-01-01"), to = as.Date("2022-12-01"), by = "month")
)
# Add dates column to fuel_df
fuel_df$date <- dates
# do not need month column anymore, want to mutate from avg price per gallon to miles per dollar
fuel_df <- fuel_df %>%
select(type, avg_gallon_equaivalent_price, date) %>%
mutate(miles_per_dollar = case_when(
type == "gas" ~ gas_avg_mpge / avg_gallon_equaivalent_price,
type == "electricity" ~ electricity_avg_mpge / avg_gallon_equaivalent_price
)) %>%
select(date, type, miles_per_dollar)
# Make Line Graph ------------------------------------------------------------
miles_per_dollar_line_graph <- fuel_df %>%
ggplot(aes(x = date, y = miles_per_dollar, color = type)) +
geom_line() +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
labs(
title = "Miles per Dollar by Month: Electricity Vs Gas",
subtitle = "Using 2024 vehicles and 2022 monthly fuel prices",
x = "Month", y = "Miles per Dollar", color = "Fuel Type"
) +
theme_bw()
# View Miles per Dollar Line Graph
miles_per_dollar_line_graph
