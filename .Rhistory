## Q4: wrangle data to cases of years with attributes: year, count of EVs
EV_ownership_global_year <- EV_ownership_region_year_raw %>%
group_by(year) %>%
summarise(count = sum(count))
## Q5: wrangle data to get cases of regions from 2019-2022 with attributes: region, count of EVs
EV_ownership_region_2019_2022 <- EV_ownership_region_year_raw %>%
filter(year >= 2019) %>%
group_by(region) %>%
summarise(count = sum(count))
## only want to include columns for: year, region, count of EVs
EV_ownership_region_year_raw <- EV_Global_Historical_raw %>%
filter(unit == "Vehicles", region != "World") %>%
select(region, year, value) %>%
group_by(region, year) %>%
summarise(count = sum(value))
## Q4: wrangle data to cases of years with attributes: year, count of EVs
EV_ownership_global_year <- EV_ownership_region_year_raw %>%
group_by(year) %>%
summarise(count = sum(count))
## Q5: wrangle data to get cases of regions from 2019-2022 with attributes: region, count of EVs
EV_ownership_region_2019_2022 <- EV_ownership_region_year_raw %>%
filter(year >= 2019) %>%
group_by(region) %>%
summarise(count = sum(count))
## Create Bar Chart of Global EV Ownership by Year -----------------------------
global_ev_ownership_by_year_bar_chart <- ggplot(EV_ownership_global_year, aes(x = year, y = count, fill = "red")) +
geom_col() +
scale_y_continuous(n.breaks = 8, limits = c(0, max(EV_production_global_year$count))) +
scale_x_continuous(n.breaks = 11) +
labs(
title = "Global EV Ownership since 2010",
x = "Year",
y = "Count of Electric Vehicles"
) +
theme_classic() +
theme(legend.position = "none") # removes legend
global_ev_ownership_by_year_bar_chart # to view bar chart
## Wrangle Data ----------------------------------------------------------------
# wrangle data to cases of years with attributes: year, count of EVs
EV_ownership_global_year <- EV_Global_Historical_raw %>%
filter(unit == "Vehicles", region != "World") %>%
select(year, value) %>%
group_by(year) %>%
summarise(count = sum(value))
## Create Bar Chart of Global EV Ownership by Year -----------------------------
global_ev_ownership_by_year_bar_chart <- ggplot(EV_ownership_global_year, aes(x = year, y = count, fill = "red")) +
geom_col() +
scale_y_continuous(n.breaks = 8, limits = c(0, max(EV_production_global_year$count))) +
scale_x_continuous(n.breaks = 11) +
labs(
title = "Global EV Ownership since 2010",
x = "Year",
y = "Count of Electric Vehicles"
) +
theme_classic() +
theme(legend.position = "none") # removes legend
global_ev_ownership_by_year_bar_chart # to view bar chart
## Wrangle Data ----------------------------------------------------------------
# wrangle data to cases of years with attributes: year, count of EVs
EV_ownership_global_year <- EV_Global_Historical_raw %>%
filter(unit == "Vehicles", region != "World") %>%
select(year, value) %>%
group_by(year) %>%
summarise(count = sum(value))
## Create Bar Chart of Global EV Ownership by Year -----------------------------
global_ev_ownership_by_year_bar_chart <- ggplot(EV_ownership_global_year, aes(x = year, y = count, fill = "red")) +
geom_col() +
scale_y_continuous(n.breaks = 8, limits = c(0, max(EV_ownership_global_year$count))) +
scale_x_continuous(n.breaks = 11) +
labs(
title = "Global EV Ownership since 2010",
x = "Year",
y = "Count of Electric Vehicles"
) +
theme_classic() +
theme(legend.position = "none") # removes legend
global_ev_ownership_by_year_bar_chart # to view bar chart
## Wrangle Data
# wrangle data to get cases of regions from 2019-2022 with attributes: region, count of EVs
EV_ownership_region_2019_2022 <- EV_Global_Historical_raw %>%
filter(unit == "Vehicles", region != "World") %>%
select(region, value) %>%
group_by(region) %>%
summarise(count = sum(value))
## Create bar chart of EV Ownership by Country ---------------------------------
# use y = reorder(region, +count) to order countries by car ownership
regional_ev_ownership_bar_chart <- ggplot(EV_ownership_region_2019_2022, aes(x = count, y = reorder(region, +count), fill = "red")) +
geom_col() +
scale_x_continuous(limits = c(0, max(EV_ownership_order_by_country$count)), n.breaks = 6) +
labs(
title = "EV Ownership By Region",
subtitle = "Total EVs Owned from 2019 to 2022 for each Region",
x = "Count of Electric Vehicles",
y = "Region"
) +
theme_classic() +
theme(legend.position = "none") # removes legend
regional_ev_ownership_bar_chart # to view bar chart
regional_ev_ownership_bar_chart
View(EV_GAS_data_raw)
### read in data ---------------------------------------------------------------
gas_prices <- read_excel("bls_gas_prices", range = A11:M11)
### Load Packages --------------------------------------------------------------
## Use groundhog to make sure the code runs mostly everywhere
library(groundhog)
groundhog.day <- "2023-11-20"
pkgs <- c("readxl", "dplyr", "dbplyr", "ggplot2", "tidyverse", "knitr", "kableExtra")
groundhog.library(pkgs, groundhog.day)
### read in data ---------------------------------------------------------------
gas_prices <- read_excel("bls_gas_prices.xlsx", range = "B11:M11", col_names = FALSE)
electricty_prices <- read_excel("bls_electricity_prices.xlsx", range = "B11:M11", col_names = FALSE)
EV_GAS_data_raw <- read_excel("all_alpha_24.xlsx")
### Wrangle Data
# Change names of columns with spaces
colnames(EV_GAS_data_raw)[11] <- "veh_class"
colnames(EV_GAS_data_raw)[12] <- "air_pollution_score"
colnames(EV_GAS_data_raw)[13] <- "city_mpge"
colnames(EV_GAS_data_raw)[14] <- "highway_mpge"
colnames(EV_GAS_data_raw)[15] <- "cmb_mpge"
colnames(EV_GAS_data_raw)[16] <- "greenhouse_gas_score"
# Select to Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
drop_na(cmb_mpge) %>%
filter(Fuel == "Gasoline" | Fuel == "Electricity") %>%
select(Model, Fuel, veh_class, air_pollution_score, city_mpge, highway_mpge, cmb_mpge, greenhouse_gas_score) %>%
mutate(
city_mpge = as.numeric(city_mpge),
highway_mpge = as.numeric(highway_mpge),
cmb_mpge = as.numeric(cmb_mpge),
greenhouse_gas_score = as.numeric(greenhouse_gas_score)
)
# case: fuel with attributes each month, type of fuel, average mpge of a 2024 car
electricty_prices[1:12] = electricty_prices[1:12] * 33.7 # converts from kWh to kWh equivalent of a gallon
fuel_df = full_join(gas_prices, electricty_prices)
colnames(fuel_df)[1] <- "jan"
colnames(fuel_df)[2] <- "feb"
colnames(fuel_df)[3] <- "mar"
colnames(fuel_df)[4] <- "apr"
colnames(fuel_df)[5] <- "may"
colnames(fuel_df)[6] <- "jun"
colnames(fuel_df)[7] <- "jul"
colnames(fuel_df)[8] <- "aug"
colnames(fuel_df)[9] <- "sep"
colnames(fuel_df)[10] <- "oct"
colnames(fuel_df)[11] <- "nov"
colnames(fuel_df)[12] <- "dec"
fuel_df$type = c("gas", "electricity")
fuel_df <- fuel_df %>%
pivot_longer(cols = c(jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec),
names_to = "month",
values_to = "avg_gallon_equaivalent_price") %>%
pivot_wider(id_cols = month, names_from = type, values_from = avg_gallon_equaivalent_price)
dates = seq(from = as.Date("2022-01-01"), to = as.Date("2022-12-01"), by = 'month')
fuel_df$date = dates
fuel_df_final <- fuel_df %>%
reframe(date = date, cost_per_mile_gas = gas_price_per_mile/gas, cost_per_mile_electricity = electricity_price_per_mile/electricity)
fuel_df_final
fuel_df_final <- fuel_df %>%
reframe(date = date, cost_per_mile_gas = gas_price_per_mile/gas, cost_per_mile_electricity = electricity_price_per_mile/electricity)
fuel_df
gas_price_avg_mpge <- as.numeric(gas_price_per_mile)
electricity_avg_mpge <- as.numeric(electricity_price_per_mile)
gas_avg_mpge <- as.numeric(gas_price_per_mile)
fuel_df_final <- fuel_df %>%
reframe(date = date, miles_per_dollar_gas = gas_avg_mpge/gas, miles_per_dollar_electricity = electricity_avg_mpge/electricity)
gas_avg_mpge <- as.numeric(gas_price_per_mile)
## To find average mpge
mpge_avg_fuel <- EV_GAS_data %>%
group_by(Fuel) %>%
summarise(mpge_avg = mean(cmb_mpge))
electricity_price_per_mile <- mpge_avg_fuel %>%
filter(Fuel == "Electricity") %>%
select(mpge_avg)
gas_price_per_mile <- mpge_avg_fuel %>%
filter(Fuel == "Gasoline") %>%
select(mpge_avg)
electricity_avg_mpge <- as.numeric(electricity_price_per_mile)
gas_avg_mpge <- as.numeric(gas_price_per_mile)
fuel_df_final <- fuel_df %>%
reframe(date = date, miles_per_dollar_gas = gas_avg_mpge/gas, miles_per_dollar_electricity = electricity_avg_mpge/electricity)
fuel_df
fuel_df_final
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = dates)) +
geom_line(aes(y = cost_per_mile_electricity, color = 'red', size = 1.5)) +
geom_line(aes(y = cost_per_mile_gas, color = 'blue', size = 1.5)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Price per mile for Electricity Vs Gas", x = "Month", y = "Dollars") +
theme_bw() +
theme(legend.position = "none")
fuel_plot
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = dates)) +
geom_line(aes(y = miles_per_dollar_electricity, color = 'red', size = 1.5)) +
geom_line(aes(y = miles_per_dollar_gas, color = 'blue', size = 1.5)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Price per mile for Electricity Vs Gas", x = "Month", y = "Dollars") +
theme_bw() +
theme(legend.position = "none")
fuel_plot
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = dates)) +
geom_line(aes(y = miles_per_dollar_electricity, color = 'red', size = 1.5)) +
geom_line(aes(y = miles_per_dollar_gas, color = 'blue', size = 1.5)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Price per mile for Electricity Vs Gas", x = "Month", y = "Miles per Dollar") +
theme_bw() +
theme(legend.position = "none")
fuel_plot
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = dates)) +
geom_line(aes(y = miles_per_dollar_electricity, color = 'red', size = 1.5)) +
geom_line(aes(y = miles_per_dollar_gas, color = 'blue', size = 1.5)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dolalr for Electricity Vs Gas", x = "Month", y = "Miles per Dollar") +
theme_bw() +
theme(legend.position = "none")
fuel_plot
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = dates)) +
geom_line(aes(y = miles_per_dollar_electricity, color = 'red', size = 1.5)) +
geom_line(aes(y = miles_per_dollar_gas, color = 'blue', size = 1.5)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dollar for Electricity Vs Gas", x = "Month", y = "Miles per Dollar") +
theme_bw() +
theme(legend.position = "none")
fuel_plot
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = dates)) +
geom_line(aes(y = miles_per_dollar_electricity, color = 'green', size = 1.5)) +
geom_line(aes(y = miles_per_dollar_gas, color = 'blue', size = 1.5)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dollar for Electricity Vs Gas", x = "Month", y = "Miles per Dollar") +
theme_bw() +
theme(legend.position = "none")
fuel_plot
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = dates)) +
geom_line(aes(y = miles_per_dollar_electricity, color = 'green', size = 1.5)) +
geom_line(aes(y = miles_per_dollar_gas, color = 'blue', size = 1.5)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dollar for Electricity Vs Gas", x = "Month", y = "Miles per Dollar") +
theme_bw() +
theme(legend.position = "none")
fuel_plot
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = dates)) +
geom_line(aes(y = miles_per_dollar_electricity, color = 'green', size = 1.5)) +
geom_line(aes(y = miles_per_dollar_gas, color = 'blue', size = 1.5)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dollar for Electricity Vs Gas", x = "Month", y = "Miles per Dollar") +
theme_bw()
fuel_plot
fuel_df
gas_avg_mpge
fuel_df
electricity_avg_mpge
electricity_avg_mpge
fuel_plot
### Load Packages --------------------------------------------------------------
## Use groundhog to make sure the code runs mostly everywhere
library(groundhog)
groundhog.day <- "2023-11-20"
pkgs <- c("readxl", "dplyr", "dbplyr", "ggplot2", "tidyverse", "knitr", "kableExtra")
groundhog.library(pkgs, groundhog.day)
### read in data ---------------------------------------------------------------
gas_prices <- read_excel("bls_gas_prices.xlsx", range = "B11:M11", col_names = FALSE)
electricty_prices <- read_excel("bls_electricity_prices.xlsx", range = "B11:M11", col_names = FALSE)
EV_GAS_data_raw <- read_excel("all_alpha_24.xlsx")
### Wrangle Data
# Change names of columns with spaces
colnames(EV_GAS_data_raw)[11] <- "veh_class"
colnames(EV_GAS_data_raw)[12] <- "air_pollution_score"
colnames(EV_GAS_data_raw)[13] <- "city_mpge"
colnames(EV_GAS_data_raw)[14] <- "highway_mpge"
colnames(EV_GAS_data_raw)[15] <- "cmb_mpge"
colnames(EV_GAS_data_raw)[16] <- "greenhouse_gas_score"
# Select to Model, fuel, veh_class, air pollution score, city mpg, highway mpg, greenhouse gas score
EV_GAS_data <- EV_GAS_data_raw %>%
drop_na(cmb_mpge) %>%
filter(Fuel == "Gasoline" | Fuel == "Electricity") %>%
select(Model, Fuel, veh_class, air_pollution_score, city_mpge, highway_mpge, cmb_mpge, greenhouse_gas_score) %>%
mutate(
city_mpge = as.numeric(city_mpge),
highway_mpge = as.numeric(highway_mpge),
cmb_mpge = as.numeric(cmb_mpge),
greenhouse_gas_score = as.numeric(greenhouse_gas_score)
)
# case: fuel with attributes each month, type of fuel, average mpge of a 2024 car
electricty_prices[1:12] = electricty_prices[1:12] * 33.7 # converts from kWh to kWh equivalent of a gallon
fuel_df = full_join(gas_prices, electricty_prices)
colnames(fuel_df)[1] <- "jan"
colnames(fuel_df)[2] <- "feb"
colnames(fuel_df)[3] <- "mar"
colnames(fuel_df)[4] <- "apr"
colnames(fuel_df)[5] <- "may"
colnames(fuel_df)[6] <- "jun"
colnames(fuel_df)[7] <- "jul"
colnames(fuel_df)[8] <- "aug"
colnames(fuel_df)[9] <- "sep"
colnames(fuel_df)[10] <- "oct"
colnames(fuel_df)[11] <- "nov"
colnames(fuel_df)[12] <- "dec"
## To find average mpge
mpge_avg_fuel <- EV_GAS_data %>%
group_by(Fuel) %>%
summarise(mpge_avg = mean(cmb_mpge))
electricity_price_per_mile <- mpge_avg_fuel %>%
filter(Fuel == "Electricity") %>%
select(mpge_avg)
gas_price_per_mile <- mpge_avg_fuel %>%
filter(Fuel == "Gasoline") %>%
select(mpge_avg)
electricity_avg_mpge <- as.numeric(electricity_price_per_mile)
gas_avg_mpge <- as.numeric(gas_price_per_mile)
mpge_avg_fuel
electricity_price_per_mile
fuel_df$type = c("gas", "electricity")
fuel_df <- fuel_df %>%
pivot_longer(cols = c(jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec),
names_to = "month",
values_to = "avg_gallon_equaivalent_price") %>%
pivot_wider(id_cols = month, names_from = type, values_from = avg_gallon_equaivalent_price)
dates = seq(from = as.Date("2022-01-01"), to = as.Date("2022-12-01"), by = 'month')
fuel_df$date = dates
fuel_df_final <- fuel_df %>%
reframe(date = date, miles_per_dollar_gas = gas_avg_mpge/gas, miles_per_dollar_electricity = electricity_avg_mpge/electricity)
gas_avg_mpge
electricity_avg_mpge
fuel_df
fuel_df_final
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = dates)) +
geom_line(aes(y = miles_per_dollar_electricity, color = 'green', size = 1.5)) +
geom_line(aes(y = miles_per_dollar_gas, color = 'blue', size = 1.5)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dollar for Electricity Vs Gas", x = "Month", y = "Miles per Dollar") +
theme_bw()
fuel_plot
fuel_df
fuel_df_final
fuel_df_final %>%
pivot_longer(cols = c(miles_per_dollar_electricity, miles_per_dollar_gas), names_to = c('electric', 'gas'), names_prefix = 'miles_per_dollar')
fuel_df_final %>%
pivot_longer(cols = c(miles_per_dollar_electricity, miles_per_dollar_gas), names_to = c('electric', 'gas'), names_prefix = 'miles_per_dollar', names_sep = 'miles_per_dollar')
fuel_df_final %>%
pivot_longer(cols = c(miles_per_dollar_electricity, miles_per_dollar_gas), names_to = c('electric', 'gas'), names_prefix = 'miles_per_dollar_', names_sep = 'miles_per_dollar', values_to = 'miles_per_gallon_equivalent')
fuel_df_final %>%
pivot_longer(cols = c(miles_per_dollar_electricity, miles_per_dollar_gas), names_to = fuel_type, names_prefix = 'miles_per_dollar_', names_sep = 'miles_per_dollar', values_to = 'miles_per_gallon_equivalent')
fuel_df_final %>%
pivot_longer(cols = c(miles_per_dollar_electricity, miles_per_dollar_gas), names_to = 'fuel_type', names_prefix = 'miles_per_dollar_', names_sep = 'miles_per_dollar', values_to = 'miles_per_gallon_equivalent')
fuel_df_final %>%
pivot_longer(cols = c(miles_per_dollar_electricity, miles_per_dollar_gas), names_to = 'fuel_type', names_prefix = 'miles_per_dollar_', values_to = 'miles_per_gallon_equivalent')
fuel_df_final <- fuel_df_final %>%
pivot_longer(cols = c(miles_per_dollar_electricity, miles_per_dollar_gas), names_to = 'fuel_type', names_prefix = 'miles_per_dollar_', values_to = 'miles_per_gallon_equivalent')
fuel_df_final <- fuel_df_final %>%
pivot_longer(cols = c(miles_per_dollar_electricity, miles_per_dollar_gas), names_to = 'fuel_type', names_prefix = 'miles_per_dollar_', values_to = 'miles_per_dollar')
fuel_df_final <- fuel_df %>%
reframe(date = date, miles_per_dollar_gas = gas_avg_mpge/gas, miles_per_dollar_electricity = electricity_avg_mpge/electricity)
fuel_df_final <- fuel_df_final %>%
pivot_longer(cols = c(miles_per_dollar_electricity, miles_per_dollar_gas), names_to = 'fuel_type', names_prefix = 'miles_per_dollar_', values_to = 'miles_per_dollar')
fuel_df_final
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = dates, y = miles_per_dollar_equivalent, color = fuel_type, size = 2)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dollar for Electricity Vs Gas", x = "Month", y = "Miles per Dollar") +
theme_bw()
fuel_plot
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = dates, y = miles_per_dollar, color = fuel_type, size = 2)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dollar for Electricity Vs Gas", x = "Month", y = "Miles per Dollar") +
theme_bw()
fuel_plot
View(fuel_df_final)
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = date, y = miles_per_dollar, color = fuel_type, size = 2)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dollar for Electricity Vs Gas", x = "Month", y = "Miles per Dollar") +
theme_bw()
fuel_plot
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = date, y = miles_per_dollar, color = fuel_type, size = 2)) +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dollar for Electricity Vs Gas", x = "Month", y = "Miles per Dollar") +
theme_bw()
fuel_plot
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = date, y = miles_per_dollar, color = fuel_type, size = 2)) +
geom_line() +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dollar for Electricity Vs Gas", x = "Month", y = "Miles per Dollar") +
theme_bw()
fuel_plot
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = date, y = miles_per_dollar, color = fuel_type, size = 2)) +
geom_line() +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dollar for Electricity Vs Gas", x = "Month", y = "Miles per Dollar", legend = 'Fuel Type') +
theme_bw()
fuel_plot
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = date, y = miles_per_dollar, color = fuel_type, size = 2)) +
geom_line() +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dollar for Electricity Vs Gas", x = "Month", y = "Miles per Dollar", color = "Fuel Type") +
theme_bw()
fuel_plot
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = date, y = miles_per_dollar, color = fuel_type)) +
geom_line() +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dollar for Electricity Vs Gas", x = "Month", y = "Miles per Dollar", color = "Fuel Type") +
theme_bw()
fuel_plot
typeof(fuel_df_final$date)
dates = seq(from = as.Date("2022-01-01"), to = as.Date("2022-12-01"), by = 'month')
fuel_df$date = dates
typeof(fuel_df$date)
as.Date(fuel_df_final$date)
fuel_df_final$date = as.Date(fuel_df_final$date)
View(fuel_df_final)
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = date, y = miles_per_dollar, color = fuel_type)) +
geom_line() +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dollar for Electricity Vs Gas", x = "Month", y = "Miles per Dollar", color = "Fuel Type") +
theme_bw()
fuel_plot
typeof(fuel_df_final$date)
typeof(fuel_df_final$date) = as.Date(fuel_df_final$date)
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = as.Date(date), y = miles_per_dollar, color = fuel_type)) +
geom_line() +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dollar for Electricity Vs Gas", x = "Month", y = "Miles per Dollar", color = "Fuel Type") +
theme_bw()
fuel_plot
fuel_df_final$date = as.Date(fuel_df_final$date)
View(fuel_df_final)
typeof(fuel_df_final$date)
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = as.Date(date), y = miles_per_dollar, color = fuel_type)) +
geom_line() +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dollar for Electricity Vs Gas", x = "Month", y = "Miles per Dollar", color = "Fuel Type") +
theme_bw()
fuel_plot
fuel_df_final$date <- as.Date(fuel_df_final$date, '%m/%d/%Y')
typeof(fuel_df_final$date)
View(fuel_df_final)
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = date, y = miles_per_dollar, color = fuel_type)) +
geom_line() +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dollar for Electricity Vs Gas", x = "Month", y = "Miles per Dollar", color = "Fuel Type") +
theme_bw()
fuel_plot
fuel_df_final$date <- as.Date(fuel_df_final$date, '%m/%d/%Y')
typeof(fuel_df_final$date)
View(fuel_df_final)
### Plot data
fuel_plot <- fuel_df_final %>%
ggplot(aes(x = date, y = miles_per_dollar, color = fuel_type)) +
geom_line() +
scale_y_continuous(n.breaks = 10, limits = c(0, 20)) +
scale_x_continuous(n.breaks = 12) +
labs(title = "Miles per Dollar for Electricity Vs Gas", x = "Month", y = "Miles per Dollar", color = "Fuel Type") +
theme_bw()
fuel_plot
